name: Build

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

  build_android:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Setup Java 17 (for sdkmanager)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK Command-line Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -o tools.zip https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip tools.zip
          rm tools.zip
          mv cmdline-tools latest
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Add Android SDK to PATH
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

      - name: Install SDK Packages
        run: |
          yes | sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --licenses
          sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platform-tools" "platforms;android-19" "build-tools;25.0.3"

      - name: Download NDK r17b
        run: |
          curl -o android-ndk-r17b-linux-x86_64.zip https://dl.google.com/android/repository/android-ndk-r17b-linux-x86_64.zip
          unzip android-ndk-r17b-linux-x86_64.zip -d $HOME/android-ndk
          rm android-ndk-r17b-linux-x86_64.zip

      - name: Set NDK path
        run: |
          echo "NDK_HOME=$HOME/android-ndk/android-ndk-r17b" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android-ndk/android-ndk-r17b" >> $GITHUB_ENV
          echo "ndk.dir=$HOME/android-ndk/android-ndk-r17b" > $GITHUB_WORKSPACE/telon-gateway-app/android/local.properties

      - name: Switch to Java 8 for Gradle
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Install Dependencies
        run: npm install
        working-directory: telon-gateway-app

      - name: Build Android App Bundle
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          mkdir -p android/app/build/intermediates/assets/release/
          npx react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/build/intermediates/assets/release/index.android.bundle \
            --assets-dest android/app/build/intermediates/res/merged/release
        working-directory: telon-gateway-app


      - name: Build Android Release
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          cd android
          chmod +x gradlew
          ./gradlew clean
          ./gradlew bundleRelease -Pkeystore.password=${{ secrets.KEYSTORE_PASSWORD }}
        working-directory: telon-gateway-app


  download_bundle:
    runs-on: ubuntu-latest
    needs: build_android

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Android App Bundle
        run: |
          mkdir -p $GITHUB_WORKSPACE/dist
          cp android/app/build/outputs/bundle/release/app-release.aab $GITHUB_WORKSPACE/dist
        working-directory: telon-gateway-app

      - name: Archive Bundle
        uses: actions/upload-artifact@v3
        with:
          name: android-bundle
          path: $GITHUB_WORKSPACE/dist
